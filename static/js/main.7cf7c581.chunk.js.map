{"version":3,"sources":["store/hooks.ts","layouts/gomoku/board.tsx","store/constants.ts","store/game/selectors.ts","store/utils.ts","store/ws/thunks.ts","store/game/thunks.ts","layouts/gomoku/players.tsx","store/user/selectors.ts","common/constants.ts","layouts/gomoku/winner-banner.tsx","layouts/gomoku/index.tsx","store/user/thunks.ts","store/user/slice.ts","store/user/actions.ts","layouts/welcome-screen/particles-options.ts","layouts/welcome-screen/index.tsx","App.tsx","reportWebVitals.ts","configs/config.ts","services/game-service.ts","services/http-service.ts","services/user-service.ts","store/user/reducer.ts","store/game/slice.ts","store/game/reducer.ts","services/websocket-service.ts","store/game/actions.ts","store/ws/middleware.ts","store/index.ts","store/rootReducer.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","useStyles","makeStyles","table","borderCollapse","borderSpacing","cell","position","padding","height","width","border","verticalAlign","boxSizing","backgroundColor","clickable","display","top","left","borderRadius","cursor","clickableWhite","clickableBlack","whiteFocused","boxShadow","blackFocused","GomokuBoard","props","grid","focused","onCellClick","classes","length","Typography","cellClassNameMap","B","W","U","focusedClassNameMap","getCellClassName","i","j","className","board","Array","fill","map","c","row","onClick","GAME_DOMAIN","JOIN_GAME","JOIN_GAME_FAILURE","REQUEST_GAME_PLAY","REQUEST_GAME_RESTART","GAME_EVENT","USER_DOMAIN","GET_USER","UPDATE_USERNAME","UPDATE_USERNAME_AND_START_GAME","UPDATE_USERNAME_AND_JOIN_GAME","WEBSOCKET_CONNECT","WEBSOCKET_EMIT","selectGames","createSelector","state","games","createThunkAction","type","thunk","createAsyncThunk","websocketConnect","_","thunkApi","websocketService","extra","connect","Promise","resolve","on","websocketEmit","createAction","event","args","payload","joinGame","gameId","thunkAPI","dispatch","then","emit","requestGamePlay","request","requestGameRestart","Players","list","players","player","ListItem","ListItemIcon","ListItemText","displayName","id","List","dense","subheader","variant","selectUser","GOMOKU_PATH","WinnerBanner","memo","winner","Collapse","in","Boolean","Box","justifyContent","align","COLORS","theme","container","paddingTop","spacing","boardContainer","Gomoku","useParams","game","selectGameById","user","userRegistered","useEffect","dimensions","actions","ended","winnerId","owner","colorMap","useMemo","reduce","result","index","gameGrid","forEach","playerId","x","y","find","p","ownGame","handleCellClick","useCallback","action","handleRestart","to","last","focusedX","focusedY","Container","Grid","item","md","flexDirection","Paper","marginTop","Button","color","getUser","userService","updateUsername","getState","setUser","rejectWithValue","updateUsernameAndStartGame","gameService","createGame","snapshot","push","updateUsernameAndJoinGame","initialState","userSlice","createSlice","name","reducers","setDisplayName","extraReducers","builder","addCase","pending","fulfilled","rejected","console","error","particlesOptions","background","value","repeat","size","fullScreen","enable","zIndex","particles","number","shape","lineLinked","opacity","rotate","random","direction","animation","speed","sync","minimumValue","move","outMode","paper","speedDial","goButton","WelcomeScreen","location","useLocation","joinId","URLSearchParams","search","get","handleNameChange","e","target","onGo","options","alignItems","px","py","paragraph","TextField","fullWidth","placeholder","onChange","App","history","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SERVER_URL","GameService","httpService","this","post","withCredentials","HttpService","baseUrl","URL","href","config","axios","getUrl","res","data","put","USER_API","UserService","userReducer","reducer","gameSlice","joinGameSuccess","gamePlayEvent","gameAction","playerJoinEvent","newPlayer","remove","playerLeaveEvent","gameEndEvent","gameRestartEvent","gomokuGameWinEvent","gameReducer","WebsocketService","socket","io","autoConnect","disconnected","connected","disconnect","listener","onAny","joinGameFailure","defaultGameEvent","eventActionMap","websocketMiddleware","store","next","api","arg","actionCreator","handleConnected","handleEmit","servicesAPI","createBrowserHistory","basename","configureStore","combineReducers","router","connectRouter","createRootReducer","middleware","getDefaultMiddleware","extraArgument","concat","routerMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cf7c581.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\n\nconst CELL_SIZE = 28;\nconst CLICKABLE_SIZE = 15;\n\ntype GomokuBoardProps = {\n  grid: string[][];\n  focused: [number | null, number | null];\n  onCellClick: (i: number, j: number) => any;\n};\n\nconst useStyles = makeStyles({\n  table: {\n    borderCollapse: 'collapse',\n    borderSpacing: 0\n  },\n  cell: {\n    position: 'relative',\n    padding: 0,\n    height: `${CELL_SIZE}px`,\n    width: `${CELL_SIZE}px`,\n    border: '1px solid #888',\n    verticalAlign: 'top',\n    boxSizing: 'border-box',\n    backgroundColor: 'rgb(241, 236, 211)'\n  },\n  clickable: {\n    display: 'inline-block',\n    position: 'absolute',\n    top: `-${(CLICKABLE_SIZE + 1) / 2}px`,\n    left: `-${(CLICKABLE_SIZE + 1) / 2}px`,\n    height: `${CLICKABLE_SIZE}px`,\n    width: `${CLICKABLE_SIZE}px`,\n    border: '1px solid transparent',\n    // boxShadow: '0px 0px 10px 0px transparent',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n    cursor: 'pointer'\n  },\n  clickableWhite: {\n    border: '1px solid #bbb',\n    backgroundColor: '#fff'\n  },\n  clickableBlack: {\n    border: '1px solid #111',\n    backgroundColor: '#000'\n  },\n  whiteFocused: {\n    boxShadow: '0px 0px 4px 0px rgba(0,0,0,0.4)'\n  },\n  blackFocused: {\n    boxShadow: '0px 0px 4px 0px rgba(0,0,0,0.8)'\n  }\n});\n\nconst GomokuBoard = (props: GomokuBoardProps) => {\n  const { grid, focused, onCellClick } = props;\n  const classes = useStyles();\n\n  if (!grid || grid.length === 0) {\n    return <Typography>Failed to load game grid</Typography>;\n  }\n\n  const cellClassNameMap: { [key: string]: string } = {\n    B: `${classes.clickable} ${classes.clickableBlack}`,\n    W: `${classes.clickable} ${classes.clickableWhite}`,\n    U: classes.clickable\n  };\n\n  const focusedClassNameMap: { [key: string]: string } = {\n    B: classes.blackFocused,\n    W: classes.whiteFocused\n  };\n\n  const getCellClassName = (cell: string, i: number, j: number): string => {\n    const className = cellClassNameMap[cell];\n\n    return i === focused[0] && j === focused[1]\n      ? `${className} ${focusedClassNameMap[cell]}`\n      : className;\n  };\n\n  const board = (\n    <tbody>\n      <tr>\n        {new Array(grid[0].length + 1).fill(null).map((c, j) => <td key={`comp-col-${j}`} className={classes.cell} />)}\n      </tr>\n      {grid.map((row, i) => (\n        <tr key={`row-${i}`}>\n          <td className={classes.cell} />\n          {row.map((cell, j) => (\n            <td\n              key={`cell-${i}-${j}`}\n              className={classes.cell}\n            >\n              <span className={getCellClassName(cell, i, j)} onClick={() => onCellClick(i, j)} />\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n\n  return (\n    <table className={classes.table}>\n      {board}\n    </table>\n  );\n};\n\nexport default GomokuBoard;\n","// Game\nexport const GAME_DOMAIN = 'game';\nexport const JOIN_GAME = `${GAME_DOMAIN}/JOIN_GAME`;\nexport const JOIN_GAME_FAILURE = `${GAME_DOMAIN}/JOIN_GAME_FAILURE`;\nexport const REQUEST_GAME_PLAY = `${GAME_DOMAIN}/REQUEST_GAME_PLAY`;\nexport const REQUEST_GAME_RESTART = `${GAME_DOMAIN}/REQUEST_GAME_RESTART`;\nexport const GAME_PLAY_FAILURE = `${GAME_DOMAIN}/GAME_PLAY_FAILURE`;\nexport const GAME_EVENT = `${GAME_DOMAIN}/GAME_EVENT`;\n\nexport const GOMOKU = 'gomoku';\n\nexport const PLAYER_JOIN_EVENT = 'PLAYER_JOIN';\nexport const PLAYER_LEAVE_EVENT = 'PLAYER_LEAVE';\nexport const GAME_PLAY_EVENT = 'GAME_PLAY';\nexport const GAME_END_EVENT = 'GAME_END';\nexport const GAME_RESTART_EVENT = 'GAME_RESTART';\nexport const GOMOKU_GAME_WIN_EVENT = 'GOMOKU_GAME_WIN';\n\n// User\nexport const USER_DOMAIN = 'user';\nexport const GET_USER = `${USER_DOMAIN}/getUser`;\nexport const UPDATE_USERNAME = `${USER_DOMAIN}/updateUsername`;\nexport const UPDATE_USERNAME_AND_START_GAME = `${USER_DOMAIN}/updateUsernameAndStartGame`;\nexport const UPDATE_USERNAME_AND_JOIN_GAME = `${USER_DOMAIN}/updateUsernameAndJOINGame`;\n\n// Websocket\nexport const WEBSOCKET_DOMAIN = 'ws';\nexport const WEBSOCKET_CONNECT = `${WEBSOCKET_DOMAIN}/CONNECT`;\nexport const WEBSOCKET_EMIT = `${WEBSOCKET_DOMAIN}/EMIT`;\n\nexport const WEBSOCKET_GAME_EVENT = 'GAME_EVENT';\n\nexport const WEBSOCKET_GAME_JOIN = 'GAME_JOIN';\nexport const WEBSOCKET_GAME_JOIN_SUCCESS = 'GAME_JOIN_SUCCESS';\nexport const WEBSOCKET_GAME_JOIN_FAILURE = 'GAME_JOIN_FAILURE';\n\nexport const WEBSOCKET_GAME_PLAY = 'GAME_PLAY';\n\nexport const WEBSOCKET_GAME_RESTART = 'GAME_RESTART';\n","/* eslint-disable import/prefer-default-export */\nimport { createSelector } from 'reselect';\nimport type { RootState } from '..';\nimport type { GameID } from '../../common/types';\nimport { GAME_DOMAIN } from '../constants';\nimport type { GameState } from './slice';\n\nconst selectGameDomain = (state: RootState): GameState => state[GAME_DOMAIN];\n\nconst selectGames = createSelector(\n  selectGameDomain,\n  (state) => state.games\n);\n\nexport const selectGameById = (gameId: GameID) => createSelector(\n  selectGames,\n  (state) => state[gameId]\n);\n","/* eslint-disable import/prefer-default-export */\nimport { AsyncThunk, AsyncThunkPayloadCreator, createAsyncThunk } from '@reduxjs/toolkit';\nimport { ThunkApiConfig } from './types';\n\nexport const createThunkAction = <Returned, ThunkArg = any>(\n  type: string,\n  thunk: AsyncThunkPayloadCreator<Returned, ThunkArg, ThunkApiConfig>,\n): AsyncThunk<Returned, ThunkArg, ThunkApiConfig> => createAsyncThunk(type, thunk);\n","import { createAction } from '@reduxjs/toolkit';\nimport { WEBSOCKET_CONNECT, WEBSOCKET_EMIT } from '../constants';\nimport { createThunkAction } from '../utils';\n\nexport const websocketConnect = createThunkAction(\n  WEBSOCKET_CONNECT,\n  (_, thunkApi) => {\n    const { websocketService } = thunkApi.extra;\n\n    websocketService.connect();\n\n    return new Promise<any>((resolve) => websocketService.on('connect', () => {\n      resolve(null);\n    }));\n  }\n);\n\nexport const websocketEmit = createAction(\n  WEBSOCKET_EMIT,\n  (event: any, ...args: any[]) => ({\n    payload: {\n      event, args\n    }\n  })\n);\n","import type { GameID, GamePlayRequest } from '../../common/types';\nimport {\n  JOIN_GAME, REQUEST_GAME_PLAY, REQUEST_GAME_RESTART, WEBSOCKET_GAME_JOIN, WEBSOCKET_GAME_PLAY,\n  WEBSOCKET_GAME_RESTART\n} from '../constants';\nimport { createThunkAction } from '../utils';\nimport { websocketConnect, websocketEmit } from '../ws/actions';\n\nexport const joinGame = createThunkAction(\n  JOIN_GAME,\n  (gameId: GameID, thunkAPI) => {\n    const { websocketService } = thunkAPI.extra;\n\n    return thunkAPI.dispatch(websocketConnect(null)).then(\n      () => {\n        websocketService.emit(WEBSOCKET_GAME_JOIN, { gameId });\n      }\n    );\n  }\n);\n\nexport const requestGamePlay = createThunkAction(\n  REQUEST_GAME_PLAY,\n  (request: GamePlayRequest, thunkAPI) => thunkAPI\n    .dispatch(websocketEmit(WEBSOCKET_GAME_PLAY, request))\n);\n\nexport const requestGameRestart = createThunkAction(\n  REQUEST_GAME_RESTART,\n  (gameId: GameID, thunkAPI) => thunkAPI.dispatch(websocketEmit(WEBSOCKET_GAME_RESTART, { gameId }))\n);\n","import React from 'react';\nimport {\n  List, ListItem, ListItemIcon, ListItemText, Typography\n} from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { User } from '../../common/types';\n\ntype PlayersProps = {\n  players: User[]\n};\n\nconst Players = (props: PlayersProps) => {\n  const { players } = props;\n\n  const list = players.map((player) => (\n    <ListItem key={player.id}>\n      <ListItemIcon>\n        <PersonIcon />\n      </ListItemIcon>\n      <ListItemText>\n        {player.displayName}\n      </ListItemText>\n    </ListItem>\n  ));\n\n  return (\n    <List dense subheader={<Typography variant=\"subtitle1\">Players</Typography>}>\n      {list}\n    </List>\n  );\n};\n\nexport default Players;\n","import type { RootState } from '..';\nimport type { UserState } from './slice';\nimport { USER_DOMAIN } from '../constants';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const selectUser = (state: RootState): UserState => state[USER_DOMAIN];\n","export const HOME_PATH = '/';\nexport const GOMOKU_PATH = '/gomoku';\n","import { Box, Collapse, Typography } from '@material-ui/core';\nimport React, { memo } from 'react';\nimport { User } from '../../common/types';\n\ntype WinnerBannerProps = {\n  winner: User | null;\n};\n\nconst WinnerBanner = memo((props: WinnerBannerProps) => {\n  const { winner } = props;\n  const { displayName } = winner ?? {};\n\n  return (\n    <Collapse in={Boolean(winner)}>\n      <Box padding={2} justifyContent=\"center\">\n        <Typography variant=\"h5\" align=\"center\">\n          {displayName}\n          {' '}\n          has won!\n        </Typography>\n      </Box>\n    </Collapse>\n  );\n});\n\nexport default WinnerBanner;\n","import React, {\n  memo, useCallback, useEffect, useMemo\n} from 'react';\nimport {\n  Box,\n  Paper,\n  Container, Grid, makeStyles, Typography, Button\n} from '@material-ui/core';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { last } from 'lodash';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport type { GomokuGameAction, GomokuSnapshot } from '../../common/types';\nimport GomokuBoard from './board';\nimport { selectGameById } from '../../store/game/selectors';\nimport { joinGame, requestGamePlay, requestGameRestart } from '../../store/game/thunks';\nimport Players from './players';\nimport { selectUser } from '../../store/user/selectors';\nimport { HOME_PATH } from '../../common/constants';\nimport WinnerBanner from './winner-banner';\n\ntype GomokuParams = {\n  id: string;\n};\n\nconst COLORS = ['B', 'W'];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4)\n  },\n  boardContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst Gomoku = memo(() => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n  const { id: gameId } = useParams() as GomokuParams;\n  const game = useAppSelector(selectGameById(gameId)) as GomokuSnapshot;\n  const user = useAppSelector(selectUser);\n\n  const userRegistered = Boolean(user.displayName);\n\n  useEffect(() => {\n    if (userRegistered) dispatch(joinGame(gameId));\n  }, [dispatch, gameId, userRegistered]);\n\n  const {\n    dimensions, actions = [], players = [], ended, winner: winnerId, owner\n  } = game ?? {};\n\n  const colorMap = useMemo(\n    () => players.reduce(\n      (result, player, index) => {\n        result[player.id] = COLORS[index];\n        return result;\n      },\n      {} as { [key: string]: string }\n    ),\n    [players]\n  );\n\n  const gameGrid = useMemo(() => {\n    if (!dimensions) return [];\n\n    const grid = new Array(dimensions[0]).fill(null).map(\n      () => new Array(dimensions[1]).fill('U')\n    );\n\n    actions.forEach(({ playerId, x, y }) => {\n      grid[x][y] = colorMap[playerId as string] ?? null;\n    });\n\n    return grid;\n  }, [dimensions, colorMap, actions]);\n\n  const winner = useMemo(\n    () => players.find((p) => p.id === winnerId) ?? null,\n    [players, winnerId]\n  );\n\n  const ownGame = owner && user && owner.id === user.id;\n\n  const handleCellClick = useCallback(\n    (x: number, y: number) => {\n      const action: GomokuGameAction = { x, y };\n\n      dispatch(requestGamePlay({ gameId, action }));\n    },\n    [dispatch, gameId]\n  );\n\n  const handleRestart = useCallback(() => dispatch(requestGameRestart(gameId)), [dispatch, gameId]);\n\n  if (!userRegistered) return <Redirect to={`${HOME_PATH}?join=${gameId}`} />;\n\n  if (!game) return <Typography>Loading...</Typography>;\n\n  if (ended) return <Typography>The game has ended</Typography>;\n\n  const { x: focusedX = null, y: focusedY = null } = last(actions) ?? {};\n\n  return (\n    <Container className={classes.container}>\n      <Grid container>\n        <Grid item md={8} className={classes.boardContainer}>\n          <Box display=\"flex\" flexDirection=\"column\">\n            <WinnerBanner winner={winner} />\n            {\n              players.length < 2\n                ? <Typography>Waiting for another player to join</Typography>\n                : (\n                  <GomokuBoard\n                    grid={gameGrid}\n                    focused={[focusedX, focusedY]}\n                    onCellClick={handleCellClick}\n                  />\n                )\n            }\n          </Box>\n        </Grid>\n        <Grid item md={4}>\n          <Paper>\n            <Box padding={2}>\n              <Players players={players} />\n            </Box>\n          </Paper>\n          {\n            winnerId && ownGame && (\n              <Paper>\n                <Box padding={2} marginTop={2}>\n                  <Button variant=\"contained\" color=\"secondary\" onClick={handleRestart}>Restart</Button>\n                </Box>\n              </Paper>\n            )\n          }\n        </Grid>\n      </Grid>\n    </Container>\n  );\n});\n\nexport default Gomoku;\n","import { push } from 'connected-react-router';\nimport type { RootState } from '..';\nimport type { GameID, GameSnapshot } from '../../common/types';\nimport { GOMOKU_PATH } from '../../common/constants';\nimport {\n  GET_USER, UPDATE_USERNAME, UPDATE_USERNAME_AND_START_GAME, UPDATE_USERNAME_AND_JOIN_GAME\n} from '../constants';\nimport { createThunkAction } from '../utils';\n\nexport const getUser = createThunkAction(\n  GET_USER,\n  (_, thunkAPI) => thunkAPI.extra.userService.getUser()\n);\n\nexport const updateUsername = createThunkAction(\n  UPDATE_USERNAME,\n  (_, thunkAPI) => {\n    const state = thunkAPI.getState() as RootState;\n    const { displayName } = state.user;\n\n    if (!displayName) {\n      return thunkAPI.rejectWithValue('Invalid name');\n    }\n\n    return thunkAPI.extra.userService.setUser({ displayName });\n  }\n);\n\nexport const updateUsernameAndStartGame = createThunkAction(\n  UPDATE_USERNAME_AND_START_GAME,\n  (_, thunkAPI) => thunkAPI.dispatch(updateUsername(null)).then(\n    () => thunkAPI.extra.gameService.createGame().then(\n      (snapshot: GameSnapshot) => thunkAPI.dispatch(push(`${GOMOKU_PATH}/${snapshot.gameId}`))\n    )\n  )\n);\n\nexport const updateUsernameAndJoinGame = createThunkAction(\n  UPDATE_USERNAME_AND_JOIN_GAME,\n  (gameId: GameID, thunkAPI) => thunkAPI.dispatch(updateUsername(null)).then(\n    () => thunkAPI.dispatch(push(`${GOMOKU_PATH}/${gameId}`))\n  )\n);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { getUser, updateUsername, updateUsernameAndStartGame } from './thunks';\nimport { USER_DOMAIN } from '../constants';\n\nexport type UserState = {\n  id: string | null;\n  displayName: string | null;\n};\n\nconst initialState: UserState = {\n  id: null,\n  displayName: null\n};\n\nconst userSlice = createSlice({\n  name: USER_DOMAIN,\n  initialState,\n  reducers: {\n    setDisplayName: (state, action: PayloadAction<string>) => {\n      state.displayName = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getUser.pending, () => initialState);\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      state.id = action.payload.id;\n      state.displayName = action.payload.displayName;\n    });\n    builder.addCase(getUser.rejected, (state, action) => {\n      console.error(action.payload); // TODO: implement better error handling\n    });\n\n    builder.addCase(updateUsername.fulfilled, (state, action) => {\n      const { payload: player } = action;\n\n      state.id = player.id;\n      state.displayName = player.displayName;\n    });\n\n    builder.addCase(updateUsernameAndStartGame.rejected, (state, action) => {\n      console.error(action.payload); // TODO: implement better error handling\n    });\n  }\n});\n\nexport default userSlice;\n","import userSlice from './slice';\n\nexport * from './thunks';\nexport const { setDisplayName } = userSlice.actions;\n","import type { IOptions, RecursivePartial } from 'tsparticles';\n\nconst particlesOptions: RecursivePartial<IOptions> = {\n  background: {\n    color: {\n      value: '#fff'\n    },\n    position: '50% 50%',\n    repeat: 'no-repeat',\n    size: 'cover'\n  },\n  fullScreen: {\n    enable: true,\n    zIndex: 1\n  },\n  particles: {\n    number: {\n      value: 50\n    },\n    shape: {\n      type: 'circle'\n    },\n    color: {\n      value: 'random'\n    },\n    lineLinked: {\n      enable: false\n    },\n    opacity: {\n      value: 0.3\n    },\n    rotate: {\n      value: 0,\n      random: true,\n      direction: 'counter-clockwise',\n      animation: {\n        enable: true,\n        speed: 15,\n        sync: false\n      }\n    },\n    size: {\n      value: 10,\n      random: {\n        enable: true,\n        minimumValue: 5\n      }\n    },\n    move: {\n      enable: true,\n      speed: 1,\n      random: false,\n      outMode: 'bounce'\n    }\n  },\n};\n\nexport default particlesOptions;\n","import React, { useCallback, useEffect } from 'react';\nimport {\n  Button, Container, Box, TextField, Paper, makeStyles, Typography\n} from '@material-ui/core';\nimport { useLocation } from 'react-router-dom';\nimport Particles from 'react-tsparticles';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { selectUser } from '../../store/user/selectors';\nimport {\n  getUser, setDisplayName, updateUsernameAndJoinGame, updateUsernameAndStartGame\n} from '../../store/user/actions';\nimport particlesOptions from './particles-options';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    zIndex: theme.zIndex.speedDial\n  },\n  goButton: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst WelcomeScreen = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const user = useAppSelector(selectUser);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const joinId = searchParams.get('join');\n\n  const handleNameChange = useCallback((e) => dispatch(setDisplayName(e.target.value)), [dispatch]);\n  const onGo = useCallback(() => {\n    if (joinId) dispatch(updateUsernameAndJoinGame(joinId));\n    else dispatch(updateUsernameAndStartGame(null));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getUser(null));\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Box position=\"fixed\" top={0} left={0}>\n        <Particles options={particlesOptions} />\n      </Box>\n      <Box height=\"100vh\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <Box px={6} py={4}>\n            <Typography paragraph>Please choose a name (.^◡^.)</Typography>\n            <TextField\n              fullWidth\n              name=\"Name\"\n              size=\"small\"\n              placeholder=\"Name\"\n              value={user.displayName ?? ''}\n              variant=\"outlined\"\n              onChange={handleNameChange}\n            />\n            <Button fullWidth variant=\"contained\" color=\"primary\" className={classes.goButton} onClick={onGo}>Go</Button>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { History } from 'history';\nimport Gomoku from './layouts/gomoku';\nimport WelcomeScreen from './layouts/welcome-screen';\nimport { GOMOKU_PATH, HOME_PATH } from './common/constants';\n\ninterface AppProps {\n  history: History;\n}\n\nfunction App(props: AppProps) {\n  return (\n    <ConnectedRouter history={props.history}>\n      <Switch>\n        <Route path={`${GOMOKU_PATH}/:id`} component={Gomoku} />\n        <Route path={HOME_PATH} component={WelcomeScreen} />\n      </Switch>\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// eslint-disable-next-line import/prefer-default-export\nexport const SERVER_URL = process.env.NODE_ENV === 'production'\n  ? 'https://the-online-games.herokuapp.com/'\n  : 'http://localhost:8080';\n","import type { GameSnapshot } from '../common/types';\nimport HttpService from './http-service';\n\nconst GAME_V1_API = '/api/v1/game';\n\nexport default class GameService {\n  private httpService: HttpService;\n\n  constructor(httpService: HttpService) {\n    this.httpService = httpService;\n  }\n\n  createGame(): Promise<GameSnapshot> {\n    return this.httpService.post(GAME_V1_API, null, { withCredentials: true });\n  }\n}\n","import axios from 'axios';\nimport { HttpRequestConfig } from './types';\n\nexport default class HttpService {\n  private baseUrl: string;\n\n  constructor(baseUrl: string) {\n    this.baseUrl = baseUrl;\n  }\n\n  private getUrl(target: string): string {\n    return new URL(target, this.baseUrl).href;\n  }\n\n  get(target: string, config?: HttpRequestConfig): Promise<any> {\n    return axios.get(this.getUrl(target), config).then((res) => res.data);\n  }\n\n  put(target: string, data?: any, config?: HttpRequestConfig): Promise<any> {\n    return axios.put(this.getUrl(target), data, config).then((res) => res.data);\n  }\n\n  post(target: string, data?:any, config?: HttpRequestConfig) {\n    return axios.post(this.getUrl(target), data, config).then((res) => res.data);\n  }\n}\n","import { User } from '../common/types';\nimport HttpService from './http-service';\nimport { SetUserRequest } from './types';\n\nconst USER_API = '/api/v1/user';\n\nexport default class UserService {\n  private httpService: HttpService;\n\n  constructor(httpService: HttpService) {\n    this.httpService = httpService;\n  }\n\n  getUser(): Promise<User> {\n    return this.httpService.get(USER_API, { withCredentials: true });\n  }\n\n  setUser(request: SetUserRequest): Promise<User> {\n    return this.httpService.put(USER_API, request, { withCredentials: true });\n  }\n}\n","import userSlice from './slice';\n\nconst userReducer = userSlice.reducer;\n\nexport default userReducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { remove } from 'lodash';\nimport type { Draft } from '@reduxjs/toolkit';\nimport type { GameSnapshot, GomokuGameAction, GomokuSnapshot } from '../../common/types';\nimport type {\n  GamePlayEvent, PlayerJoinEvent, PlayerLeaveEvent, GameEndEvent, GomokuGameWinEvent,\n  GameRestartEvent\n} from '../types';\nimport { GAME_DOMAIN, GOMOKU } from '../constants';\n\nexport type GameState = {\n  games: { [id: string]: GameSnapshot };\n};\n\nconst initialState: GameState = {\n  games: {}\n};\n\nconst gameSlice = createSlice({\n  name: GAME_DOMAIN,\n  initialState,\n  reducers: {\n    joinGameSuccess: (state, action: PayloadAction<GameSnapshot>) => {\n      const { games } = state;\n      const { payload } = action;\n\n      games[payload.gameId] = payload;\n    },\n    gamePlayEvent: (state, action: PayloadAction<GamePlayEvent>) => {\n      const { games } = state;\n      const { gameId, action: gameAction } = action.payload;\n\n      if (!games[gameId]) return;\n\n      const { name } = games[gameId];\n\n      switch (name) {\n        case GOMOKU: {\n          const game = games[gameId] as Draft<GomokuSnapshot>;\n          game.actions.push(gameAction as GomokuGameAction);\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    },\n    playerJoinEvent: (state, action: PayloadAction<PlayerJoinEvent>) => {\n      const { games } = state;\n      const { gameId, player: newPlayer } = action.payload;\n\n      if (!games[gameId]) return;\n\n      const { players } = games[gameId];\n\n      remove(players, (player) => player.id === newPlayer.id);\n      players.push(newPlayer);\n    },\n    playerLeaveEvent: (state, action: PayloadAction<PlayerLeaveEvent>) => {\n      const { games } = state;\n      const { gameId, playerId } = action.payload;\n\n      if (!games[gameId]) return;\n\n      const { players } = games[gameId];\n\n      remove(players, (player) => player.id === playerId);\n    },\n    gameEndEvent: (state, action: PayloadAction<GameEndEvent>) => {\n      const { games } = state;\n      const { gameId } = action.payload;\n\n      if (!games[gameId]) return;\n\n      games[gameId].ended = true;\n    },\n    gameRestartEvent: (state, action: PayloadAction<GameRestartEvent>) => {\n      const { games } = state;\n      const { gameId, snapshot } = action.payload;\n\n      if (!games[gameId]) return;\n\n      games[gameId] = snapshot;\n    },\n\n    // Gomoku Reducers\n    gomokuGameWinEvent: (state, action: PayloadAction<GomokuGameWinEvent>) => {\n      const { games } = state;\n      const { gameId, winner } = action.payload;\n\n      if (!games[gameId]) return;\n\n      const gomoku = games[gameId] as Draft<GomokuSnapshot>;\n\n      gomoku.winner = winner;\n    }\n  }\n});\n\nexport default gameSlice;\n","import gameSlice from './slice';\n\nconst gameReducer = gameSlice.reducer;\n\nexport default gameReducer;\n","import { io, Socket } from 'socket.io-client';\n\nexport default class WebsocketService {\n  private socket: Socket;\n\n  constructor(baseUrl: string) {\n    this.socket = io(baseUrl, {\n      withCredentials: true,\n      autoConnect: false\n    });\n  }\n\n  connect(): void {\n    if (this.socket.disconnected) {\n      this.socket.connect();\n    }\n  }\n\n  disconnect(): void {\n    if (this.socket.connected) {\n      this.socket.disconnect();\n    }\n  }\n\n  emit(event: string, ...args: any[]): void {\n    this.socket.emit(event, ...args);\n  }\n\n  on(event: string, listener: (...args: any[]) => void): void {\n    this.socket.on(event, listener);\n  }\n\n  onAny(listener: (...args: any[]) => void): void {\n    this.socket.onAny(listener);\n  }\n}\n","import { createAction } from '@reduxjs/toolkit';\nimport type { AnyAction } from '@reduxjs/toolkit';\nimport type {\n  GameAction, GameSnapshot, User, UserID\n} from '../../common/types';\nimport type { GameEvent } from '../types';\nimport {\n  GAME_EVENT, GAME_PLAY_EVENT, JOIN_GAME_FAILURE,\n  PLAYER_JOIN_EVENT, PLAYER_LEAVE_EVENT, GAME_END_EVENT, GOMOKU_GAME_WIN_EVENT,\n  GAME_RESTART_EVENT\n} from '../constants';\nimport gameSlice from './slice';\n\nexport const {\n  joinGameSuccess, gamePlayEvent, playerJoinEvent, playerLeaveEvent, gameEndEvent,\n  gameRestartEvent, gomokuGameWinEvent\n} = gameSlice.actions;\n\nexport const joinGameFailure = createAction(JOIN_GAME_FAILURE);\n\nconst defaultGameEvent = createAction(\n  GAME_EVENT,\n  (payload: GameEvent) => ({ payload })\n);\n\nexport const gameEvent = (event: GameEvent): AnyAction => {\n  const { type, gameId, payload } = event;\n\n  switch (type) {\n    case PLAYER_JOIN_EVENT:\n      return playerJoinEvent({ gameId, player: payload as User });\n\n    case PLAYER_LEAVE_EVENT:\n      return playerLeaveEvent({ gameId, playerId: payload as UserID });\n\n    case GAME_PLAY_EVENT:\n      return gamePlayEvent({ gameId, action: payload as GameAction });\n\n    case GAME_END_EVENT:\n      return gameEndEvent({ gameId });\n\n    case GAME_RESTART_EVENT:\n      return gameRestartEvent({ gameId, snapshot: payload as GameSnapshot });\n\n    // Gomoku Events\n    case GOMOKU_GAME_WIN_EVENT:\n      return gomokuGameWinEvent({ gameId, winner: payload as UserID });\n\n    default:\n      break;\n  }\n\n  return defaultGameEvent(event);\n};\n\nexport * from './thunks';\n","/* eslint-disable max-len */\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport type { AnyAction, Middleware, MiddlewareAPI } from 'redux';\nimport { gameEvent, joinGameFailure, joinGameSuccess } from '../game/actions';\nimport type { ServicesAPI, EmitPayload } from '../types';\nimport { websocketConnect } from './actions';\nimport {\n  WEBSOCKET_EMIT, WEBSOCKET_GAME_EVENT, WEBSOCKET_GAME_JOIN_SUCCESS, WEBSOCKET_GAME_JOIN_FAILURE\n} from '../constants';\n\ntype WebsocketMiddlewareOptions = {\n  api: ServicesAPI;\n};\n\nconst eventActionMap: { [key: string]: (...args: any[]) => AnyAction } = {\n  [WEBSOCKET_GAME_EVENT]: gameEvent,\n  [WEBSOCKET_GAME_JOIN_SUCCESS]: joinGameSuccess,\n  [WEBSOCKET_GAME_JOIN_FAILURE]: joinGameFailure\n};\n\nconst handleConnected = (options: WebsocketMiddlewareOptions, store: MiddlewareAPI) => {\n  const { api } = options;\n\n  api.websocketService.onAny((event, arg) => {\n    const actionCreator = eventActionMap[event];\n\n    if (actionCreator) {\n      store.dispatch(actionCreator(arg));\n    }\n  });\n};\n\nconst handleEmit = (options: WebsocketMiddlewareOptions, action: PayloadAction<EmitPayload>) => {\n  const { api } = options;\n  const { payload: { event, args } } = action;\n\n  api.websocketService.emit(event, ...args);\n};\n\nconst websocketMiddleware = (options: WebsocketMiddlewareOptions): Middleware => (store) => (next) => (action) => {\n  const { type } = action;\n\n  switch (type) {\n    case websocketConnect.fulfilled.type:\n      handleConnected(options, store);\n      break;\n\n    case WEBSOCKET_EMIT:\n      handleEmit(options, action);\n      break;\n\n    default:\n      break;\n  }\n\n  return next(action);\n};\n\nexport default websocketMiddleware;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport { SERVER_URL } from '../configs/config';\nimport GameService from '../services/game-service';\nimport HttpService from '../services/http-service';\nimport UserService from '../services/user-service';\n// eslint-disable-next-line import/no-cycle\nimport { createRootReducer } from './rootReducer';\nimport type { ServicesAPI } from './types';\nimport WebsocketService from '../services/websocket-service';\nimport websocketMiddleware from './ws/middleware';\n\nconst httpService = new HttpService(SERVER_URL);\nconst websocketService = new WebsocketService(SERVER_URL);\n\nconst servicesAPI: ServicesAPI = {\n  userService: new UserService(httpService),\n  gameService: new GameService(httpService),\n  websocketService\n};\n\nexport const history = process.env.NODE_ENV === 'production'\n  ? createBrowserHistory({ basename: '/web-games' })\n  : createBrowserHistory();\n\nconst store = configureStore({\n  reducer: createRootReducer(history),\n  middleware: (getDefaultMiddleware) => {\n    const defaultMiddleware = getDefaultMiddleware({\n      thunk: { extraArgument: servicesAPI }\n    });\n\n    return defaultMiddleware\n      .concat(routerMiddleware(history))\n      .concat(websocketMiddleware({\n        api: servicesAPI\n      }));\n  },\n  devTools: process.env.NODE_ENV !== 'production'\n});\n\nexport type AppStore = typeof store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import { connectRouter } from 'connected-react-router';\nimport { combineReducers } from 'redux';\nimport userReducer from './user/reducer';\nimport gameReducer from './game/reducer';\nimport { GAME_DOMAIN, USER_DOMAIN } from './constants';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  [USER_DOMAIN]: userReducer,\n  [GAME_DOMAIN]: gameReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store, { history } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}